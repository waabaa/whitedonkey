#!/bin/bash

# üóÑÔ∏è Ìù∞ÎãπÎÇòÍ∑Ä Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑ§Ï†ï Ïä§ÌÅ¨Î¶ΩÌä∏
# Ïã§Ìñâ: chmod +x server-scripts/02-database-setup.sh && ./server-scripts/02-database-setup.sh

set -e

SERVER_PATH="/var/www/whitedonkey"
LOG_FILE="/var/log/whitedonkey-database.log"

# ÏÉâÍπî Ï∂úÎ†• Ìï®Ïàò
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}[$(date '+%Y-%m-%d %H:%M:%S')] ‚úÖ $1${NC}" | tee -a "$LOG_FILE"
}

warning() {
    echo -e "${YELLOW}[$(date '+%Y-%m-%d %H:%M:%S')] ‚ö†Ô∏è  $1${NC}" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}[$(date '+%Y-%m-%d %H:%M:%S')] ‚ùå $1${NC}" | tee -a "$LOG_FILE"
}

log "üóÑÔ∏è Ìù∞ÎãπÎÇòÍ∑Ä Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑ§Ï†ï ÏãúÏûë..."

# ÌòÑÏû¨ ÎîîÎ†âÌÜ†Î¶¨ ÌôïÏù∏
if [ ! -d "$SERVER_PATH" ]; then
    error "ÏÑúÎ≤Ñ ÎîîÎ†âÌÜ†Î¶¨Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§: $SERVER_PATH"
    exit 1
fi

cd "$SERVER_PATH"

# 1. PostgreSQL ÏÉÅÌÉú ÌôïÏù∏
log "1. PostgreSQL ÏÑúÎπÑÏä§ ÏÉÅÌÉú ÌôïÏù∏..."
if systemctl is-active --quiet postgresql; then
    success "PostgreSQLÏù¥ Ïã§Ìñâ Ï§ëÏûÖÎãàÎã§"
else
    warning "PostgreSQLÏù¥ Ï§ëÏßÄÎêòÏñ¥ ÏûàÏäµÎãàÎã§. ÏãúÏûëÌï©ÎãàÎã§..."
    sudo systemctl start postgresql
    sleep 3
fi

# 2. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ ÏûÖÎ†•
log "2. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑ§Ï†ï Ï†ïÎ≥¥ ÏûÖÎ†•..."

# Í∏∞Î≥∏Í∞í ÏÑ§Ï†ï
DEFAULT_DB_NAME="whitedonkey_db"
DEFAULT_DB_USER="whitedonkey"
DEFAULT_DB_HOST="localhost"
DEFAULT_DB_PORT="5432"

# ÏÇ¨Ïö©Ïûê ÏûÖÎ†• ÎòêÎäî Í∏∞Î≥∏Í∞í ÏÇ¨Ïö©
DB_NAME="${DB_NAME:-$DEFAULT_DB_NAME}"
DB_USER="${DB_USER:-$DEFAULT_DB_USER}"
DB_HOST="${DB_HOST:-$DEFAULT_DB_HOST}"
DB_PORT="${DB_PORT:-$DEFAULT_DB_PORT}"

# ÎπÑÎ∞ÄÎ≤àÌò∏ ÏÉùÏÑ± (ÌôòÍ≤ΩÎ≥ÄÏàòÍ∞Ä ÏóÜÏúºÎ©¥ ÎûúÎç§ ÏÉùÏÑ±)
if [ -z "$DB_PASSWORD" ]; then
    DB_PASSWORD=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-16)
    success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏûêÎèô ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§"
fi

log "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ïÎ≥¥:"
log "- Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§Î™Ö: $DB_NAME"
log "- ÏÇ¨Ïö©ÏûêÎ™Ö: $DB_USER"
log "- Ìò∏Ïä§Ìä∏: $DB_HOST"
log "- Ìè¨Ìä∏: $DB_PORT"

# 3. PostgreSQL ÏÇ¨Ïö©Ïûê Î∞è Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÉùÏÑ±
log "3. PostgreSQL ÏÇ¨Ïö©Ïûê Î∞è Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÉùÏÑ±..."

# ÏÇ¨Ïö©Ïûê Ï°¥Ïû¨ ÌôïÏù∏
if sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='$DB_USER'" | grep -q 1; then
    warning "ÏÇ¨Ïö©Ïûê '$DB_USER'Í∞Ä Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§"
else
    sudo -u postgres psql -c "CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';"
    success "ÏÇ¨Ïö©Ïûê '$DB_USER' ÏÉùÏÑ± ÏôÑÎ£å"
fi

# Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï°¥Ïû¨ ÌôïÏù∏
if sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw "$DB_NAME"; then
    warning "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ '$DB_NAME'Í∞Ä Ïù¥ÎØ∏ Ï°¥Ïû¨Ìï©ÎãàÎã§"
else
    sudo -u postgres createdb -O "$DB_USER" "$DB_NAME"
    success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ '$DB_NAME' ÏÉùÏÑ± ÏôÑÎ£å"
fi

# Í∂åÌïú Î∂ÄÏó¨
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;"
sudo -u postgres psql -c "ALTER USER $DB_USER CREATEDB;"
success "ÏÇ¨Ïö©Ïûê Í∂åÌïú ÏÑ§Ï†ï ÏôÑÎ£å"

# 4. .env ÌååÏùº ÏÉùÏÑ±/ÏóÖÎç∞Ïù¥Ìä∏
log "4. .env ÌååÏùº ÏÑ§Ï†ï..."

# Í∏∞Ï°¥ .env Î∞±ÏóÖ
if [ -f ".env" ]; then
    cp .env ".env.backup.$(date +%Y%m%d_%H%M%S)"
    warning "Í∏∞Ï°¥ .env ÌååÏùºÏùÑ Î∞±ÏóÖÌñàÏäµÎãàÎã§"
fi

# DATABASE_URL ÏÉùÏÑ±
DATABASE_URL="postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME"

# .env ÌååÏùº ÏÉùÏÑ±
cat > .env << EOF
# Database
DATABASE_URL="$DATABASE_URL"

# NextAuth.js
NEXTAUTH_SECRET="whitedonkey-secret-$(openssl rand -base64 32 | tr -d '=+/')"
NEXTAUTH_URL="https://whitedonkey.ktenterprise.net"

# Application Settings
APP_NAME="Ìù∞ÎãπÎÇòÍ∑Ä (White Donkey)"
ADMIN_EMAIL="support@whitedonkey.co.kr"

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# File Upload Settings
MAX_FILE_SIZE=5242880
UPLOAD_DIR="./uploads"

# Production Settings
NODE_ENV=production
PORT=3000
EOF

success ".env ÌååÏùº ÏÉùÏÑ± ÏôÑÎ£å"

# 5. ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú ÌÖåÏä§Ìä∏
log "5. ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú ÌÖåÏä§Ìä∏..."
export $(grep -v '^#' .env | xargs)

if [ -n "$DATABASE_URL" ]; then
    success "DATABASE_URL ÏÑ§Ï†ï ÌôïÏù∏Îê®"
else
    error "DATABASE_URL ÏÑ§Ï†ï Ïã§Ìå®"
    exit 1
fi

# 6. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
log "6. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏..."
if PGPASSWORD="$DB_PASSWORD" psql -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" -c "SELECT 1;" > /dev/null 2>&1; then
    success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÏÑ±Í≥µ"
else
    error "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ Ïã§Ìå®"
    exit 1
fi

# 7. Prisma ÏÑ§Ï†ï ÌôïÏù∏
log "7. Prisma ÏÑ§Ï†ï ÌôïÏù∏..."
if [ -f "prisma/schema.prisma" ]; then
    success "Prisma Ïä§ÌÇ§Îßà ÌååÏùº Î∞úÍ≤¨"
    
    # Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ±
    log "Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ± Ï§ë..."
    if npx prisma generate; then
        success "Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ± ÏôÑÎ£å"
    else
        error "Prisma ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏ ÏÉùÏÑ± Ïã§Ìå®"
        exit 1
    fi
    
    # Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò
    log "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Ïã§Ìñâ Ï§ë..."
    if npx prisma migrate deploy; then
        success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò ÏôÑÎ£å"
    else
        warning "ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò Ïã§Ìå®. Í∞úÎ∞úÏö© ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖòÏùÑ ÏãúÎèÑÌï©ÎãàÎã§..."
        if npx prisma db push; then
            success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïä§ÌÇ§Îßà ÎèôÍ∏∞Ìôî ÏôÑÎ£å"
        else
            error "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò/ÎèôÍ∏∞Ìôî Ïã§Ìå®"
            exit 1
        fi
    fi
else
    warning "Prisma Ïä§ÌÇ§Îßà ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§"
fi

# 8. Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ ÏãúÎìú (ÏûàÎäî Í≤ΩÏö∞)
if [ -f "prisma/seed.ts" ] || [ -f "prisma/seed.js" ]; then
    log "8. Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ ÏãúÎìú Ïã§Ìñâ..."
    if npx prisma db seed; then
        success "Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ ÏãúÎìú ÏôÑÎ£å"
    else
        warning "Ï¥àÍ∏∞ Îç∞Ïù¥ÌÑ∞ ÏãúÎìú Ïã§Ìå® (Ïä§ÌÇµÎê®)"
    fi
fi

# 9. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ïÎ≥¥ Ï†ÄÏû•
log "9. Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ïÎ≥¥ Ï†ÄÏû•..."
cat > database-info.txt << EOF
=== Ìù∞ÎãπÎÇòÍ∑Ä Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ïÎ≥¥ ===
ÏÉùÏÑ±ÏùºÏãú: $(date '+%Y-%m-%d %H:%M:%S')

Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§Î™Ö: $DB_NAME
ÏÇ¨Ïö©ÏûêÎ™Ö: $DB_USER
ÎπÑÎ∞ÄÎ≤àÌò∏: $DB_PASSWORD
Ìò∏Ïä§Ìä∏: $DB_HOST
Ìè¨Ìä∏: $DB_PORT

Ïó∞Í≤∞ Î¨∏ÏûêÏó¥: $DATABASE_URL

=== Í¥ÄÎ¶¨ Î™ÖÎ†πÏñ¥ ===
Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ëÏÜç: PGPASSWORD='$DB_PASSWORD' psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME
Î∞±ÏóÖ: pg_dump -h $DB_HOST -p $DB_PORT -U $DB_USER $DB_NAME > backup.sql
Î≥µÏõê: PGPASSWORD='$DB_PASSWORD' psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME < backup.sql

‚Äª Ïù¥ ÌååÏùºÏùÄ ÎØºÍ∞êÌïú Ï†ïÎ≥¥Î•º Ìè¨Ìï®ÌïòÍ≥† ÏûàÏúºÎãà ÏïàÏ†ÑÌïòÍ≤å Î≥¥Í¥ÄÌïòÏÑ∏Ïöî.
EOF

# ÌååÏùº Í∂åÌïú ÏÑ§Ï†ï (ÏÜåÏú†ÏûêÎßå ÏùΩÍ∏∞ Í∞ÄÎä•)
chmod 600 database-info.txt
success "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ï†ïÎ≥¥Í∞Ä database-info.txtÏóê Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§"

# 10. PostgreSQL ÏÑ§Ï†ï ÏµúÏ†ÅÌôî
log "10. PostgreSQL ÏÑ±Îä• ÏµúÏ†ÅÌôî..."
POSTGRES_VERSION=$(sudo -u postgres psql -c 'SHOW server_version;' | head -3 | tail -1 | cut -d' ' -f1)
POSTGRES_CONF="/etc/postgresql/$(echo $POSTGRES_VERSION | cut -d'.' -f1)/main/postgresql.conf"

if [ -f "$POSTGRES_CONF" ]; then
    # ÏÑ§Ï†ï Î∞±ÏóÖ
    sudo cp "$POSTGRES_CONF" "$POSTGRES_CONF.backup.$(date +%Y%m%d_%H%M%S)"
    
    # Î©îÎ™®Î¶¨ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
    TOTAL_MEM=$(free -m | awk 'NR==2{print $2}')
    SHARED_BUFFERS=$((TOTAL_MEM / 4))  # Ï¥ù Î©îÎ™®Î¶¨Ïùò 25%
    
    # ÏÑ±Îä• ÏÑ§Ï†ï Ï∂îÍ∞Ä
    sudo bash -c "cat >> $POSTGRES_CONF" << EOF

# ÏÑ±Îä• ÏµúÏ†ÅÌôî ÏÑ§Ï†ï ($(date '+%Y-%m-%d %H:%M:%S') Ï∂îÍ∞Ä)
shared_buffers = ${SHARED_BUFFERS}MB
effective_cache_size = $((TOTAL_MEM * 3 / 4))MB
work_mem = 4MB
maintenance_work_mem = 64MB
checkpoint_completion_target = 0.7
wal_buffers = 16MB
default_statistics_target = 100
EOF
    
    success "PostgreSQL ÏÑ±Îä• ÏÑ§Ï†ï ÏµúÏ†ÅÌôî ÏôÑÎ£å"
    warning "ÏÑ§Ï†ï Ï†ÅÏö©ÏùÑ ÏúÑÌï¥ PostgreSQLÏùÑ Ïû¨ÏãúÏûëÌï©ÎãàÎã§..."
    sudo systemctl restart postgresql
    sleep 5
else
    warning "PostgreSQL ÏÑ§Ï†ï ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§"
fi

success "üéâ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑ§Ï†ï ÏôÑÎ£å!"
success "Îã§Ïùå Îã®Í≥Ñ: ./server-scripts/03-service-activation.sh Ïã§Ìñâ"

# Ï§ëÏöîÌïú Ï†ïÎ≥¥ Ï∂úÎ†•
echo ""
echo "üîê Ï§ëÏöî Ï†ïÎ≥¥:"
echo "Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÎπÑÎ∞ÄÎ≤àÌò∏: $DB_PASSWORD"
echo "Ïó∞Í≤∞ Î¨∏ÏûêÏó¥: $DATABASE_URL"
echo "‚Äª database-info.txt ÌååÏùºÏóê Î™®Îì† Ï†ïÎ≥¥Í∞Ä Ï†ÄÏû•ÎêòÏóàÏäµÎãàÎã§"